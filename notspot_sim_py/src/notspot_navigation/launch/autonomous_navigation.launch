<launch>
  <!-- Enable use_sim_time to sync with Gazebo -->
  <param name="use_sim_time" value="true" />
  
  <!-- Start Gazebo with NotSpot -->
  <include file="$(find notspot)/launch/run_robot_gazebo.launch" />
  
  <!-- TF Tree Setup -->
  <!-- Add world to map transform for proper alignment -->
  <node pkg="tf" type="static_transform_publisher" name="world_to_map"
        args="0 0 0 0 0 0 world map 100" />
  
  <!-- Add a base_footprint frame at the ground level -->
  <node pkg="tf" type="static_transform_publisher" name="base_footprint"
        args="0 0 0.15 0 0 0 base_link base_footprint 100" />
  
  <!-- Start gmapping for simultaneous mapping with enhanced parameters -->
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <param name="scan" value="/scan"/>
    <param name="base_frame" value="base_link"/>
    <param name="odom_frame" value="odom"/>
    <param name="map_frame" value="map"/>
    <param name="map_update_interval" value="5.0"/>
    <param name="maxUrange" value="6.0"/>
    <param name="maxRange" value="8.0"/>
    <param name="linearUpdate" value="0.1"/>
    <param name="angularUpdate" value="0.1"/>
    <param name="temporalUpdate" value="0.5"/>
    <param name="particles" value="100"/>
    <param name="delta" value="0.05"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
    <param name="transform_publish_period" value="0.05"/>
    <param name="occ_thresh" value="0.25"/>
    <param name="minimumScore" value="50"/>
  </node>

  <!-- Publish odometry for navigation -->
  <node pkg="notspot_navigation" type="simple_odom_publisher.py" name="odom_publisher" output="screen"/>
  
  <!-- Move base for path planning and navigation -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find notspot_navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find notspot_navigation)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find notspot_navigation)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find notspot_navigation)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find notspot_navigation)/config/base_local_planner_params.yaml" command="load" />
    
    <!-- Explicitly set frame names to ensure consistency -->
    <param name="global_costmap/global_frame" value="map"/>
    <param name="global_costmap/robot_base_frame" value="base_link"/>
    <param name="local_costmap/global_frame" value="odom"/>
    <param name="local_costmap/robot_base_frame" value="base_link"/>
    
    <!-- Additional parameters for improved navigation -->
    <param name="controller_frequency" value="5.0"/>
    <param name="planner_frequency" value="2.0"/>
    <param name="recovery_behavior_enabled" value="true"/>
    <param name="clearing_rotation_allowed" value="true"/>
    <param name="shutdown_costmaps" value="false"/>
    <param name="oscillation_timeout" value="10.0"/>
    <param name="oscillation_distance" value="0.2"/>
  </node>
  
  <!-- Start cmd_vel to joints converter -->
  <node pkg="notspot_navigation" type="cmd_vel_to_joints.py" name="cmd_vel_to_joints" output="screen">
    <!-- Set to trot mode automatically -->
    <param name="auto_mode" value="trot"/>
  </node>
  
  <!-- Start RViz with a configuration for navigation -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find notspot_navigation)/rviz/navigation.rviz"/>
</launch>